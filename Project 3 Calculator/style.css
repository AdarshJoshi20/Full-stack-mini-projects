*{
    /* border-radius: 50%; */
    font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

#calculator{
    display: flex;
    flex-direction: column;
    width: 500px;
}
#display{
    width: 100%;
    height: 300px;
    border: none;
   
}

#utils{
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-start;
}

/* #History{
    display: flex;
    align-items: flex-start;
} */

#clearDigit{
    align-items: flex-end;
    background-color: blue;
}

#buttonsArea{
    /* all child elements (buttons) will be placed in grid structure */
    display: grid;

    /* Itâ€™s a CSS Grid property that defines how many columns 
    your grid will have and how wide each column will be. */
    /* fr = fractional unit, it divides the available space appropriately. */
    /* i have written 1fr 4 times it means it will create 4 columns
    each taking 1 fractional unit of space. 
    another way to do the same is using repeat() function
    like this: grid-template-columns: repeat(4, 1fr); */
    grid-template-columns: 1fr 1fr 1fr 1fr;
    width: 500px;
    gap:10px;
    padding: 20px;
}
button{
    
    font-size: 40px;
    width: 370px;
    height: 100px;
    border: none;
    border-radius: 5px;
    background-color: rgba(0, 0, 0, 0.696);
    color: white;
    
}

#calculate{
    background-color: rgb(144, 206, 51);
}

/* #buttonsArea{
    display: flex;
    wrap
    justify-content: space-between;
} */